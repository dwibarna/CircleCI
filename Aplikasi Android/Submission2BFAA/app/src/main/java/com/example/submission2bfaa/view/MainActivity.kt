package com.example.submission2bfaa.viewimport com.example.submission2bfaa.adapter.UserAdapterimport android.content.Intentimport android.os.Bundleimport android.view.Menuimport android.view.MenuItemimport android.view.Viewimport android.widget.SearchViewimport androidx.appcompat.app.AppCompatActivityimport androidx.lifecycle.Observerimport androidx.lifecycle.ViewModelProviderimport androidx.recyclerview.widget.LinearLayoutManagerimport com.example.submission2bfaa.Rimport kotlinx.android.synthetic.main.activity_main.*import com.example.submission2bfaa.model.Userimport com.example.submission2bfaa.viewModel.UserViewModelclass MainActivity : AppCompatActivity() {    private lateinit var mainViewModel: UserViewModel    private lateinit var userAdapter: UserAdapter    private var listDataUser:ArrayList<User> = ArrayList()    companion object{        val TAG= MainActivity::class.java.simpleName    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_main)        mainViewModel = ViewModelProvider(            this,ViewModelProvider.NewInstanceFactory()        ).get(UserViewModel::class.java)        searchUser()        showRecyclerList()        getDataModel()        showList(userAdapter)        btnListFavorite.setOnClickListener{            val mIntent = Intent(it.context, FavoriteActivity::class.java)            it.context.startActivity(mIntent)        }    }    private fun showList(adapter:UserAdapter) {        mainViewModel.getListUser().observe(this, Observer { userList ->            if (userList != null){                adapter.setData(userList)                showLoading(false)            }        })    }    private fun getDataModel() {        mainViewModel.getDataModel(applicationContext)        showLoading(true)    }    private fun showRecyclerList() {        etRecyclerView.layoutManager = LinearLayoutManager(this)        userAdapter = UserAdapter()        userAdapter.notifyDataSetChanged()        etRecyclerView.adapter = userAdapter    }    private fun showLoading(state: Boolean) {        if (state) {            progressBar.visibility = View.VISIBLE        } else {            progressBar.visibility = View.GONE        }    }    private fun searchUser(){            scUser.setOnQueryTextListener(object : SearchView.OnQueryTextListener {                override fun onQueryTextSubmit(query: String?): Boolean {                    if (query != null) {                        listDataUser.clear()                        scUser.clearFocus()                        mainViewModel.getSearchModel(query,applicationContext)                        showLoading(true)                        showList(userAdapter)                    }                    return false                }                override fun onQueryTextChange(newText: String?): Boolean {                    return true                }            })    }    override fun onCreateOptionsMenu(menu: Menu): Boolean {        menuInflater.inflate(R.menu.main_menu, menu)        return super.onCreateOptionsMenu(menu)    }    override fun onOptionsItemSelected(item: MenuItem): Boolean {        when(item.itemId){            R.id.action_change_settings ->{                val mIntent = Intent(this, SettingsActivity::class.java)                startActivity(mIntent)            }        }        return super.onOptionsItemSelected(item)    }}